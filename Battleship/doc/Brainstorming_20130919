
- Daten, Präsentation zwischenpräsentation.
- methode vorgegeben? relevant für präsentation?
- gehst es ausschliesslich um das Produkt oder auch um das Wie?
- UML ?? was?


- AI 
- 


Freita Meetings

Was ist gegangen?
Code Walk Trough
Problem Diskussion.
Battleship jeder gegen jeden!



Donnerstag Homeoffice
Java
Github

Simu AI, Meyer Graphik, Fränzi Kommunikation

---------------------------
Scrum Initial Meeting
---------------------------

Project Setup, Brainstorming, Project Administration, General Task Asignement.



Pretask:
Diary
Projectlog


Task1
Simon: GitProject
Meyer Initial Project
Scrum Anschauen



Usaccases:

Search Oponent
Schiffe setzte
darstellen vom gegner
piu piu
schiff remove
loose/ win

hiscore
history
chat
speed chess /timer
define ships
Themes
Spiel Abspeicher (Checksum)

Find Computer oponent

-------------------------------

UML
Context Model
Use Case Diagram
Activity Diagramm
Zustandsdiagramm (Speichern)
Domain Model
Sequence Diagramm

CCRC-Karten

Class Diagramm
Package Diagramm








ToDo
BattleShip Film Schauen.



---------------------
Lektion2 20-09-2013
---------------------

Vision (Requirements)(Context Model)
Zeitplan (Excel)
Use Cases
-bis Freitag 27-09-2013


DomainModel


Intorduction
-------------------
Im rahmen des Moduls "Projekt 1" wird das bekannte Spiel "Schiffeversenken (engl. Battleship)" implementiert.
Ein genauer Spielbeschrieb findet sich auf Wikipedia.(1)

(1)http://de.wikipedia.org/wiki/Schiffe_versenken


Managament Summary
-------------------

Das vorliegende Dokument beschreibt die Anforderungen an das "Battleship" Spiel und dient weiter zur grundlegenden Definition der Systemarchitektur und der verwendeten Systemmodelle.

Das Projektteam besteht aus drei Personen, namentlich: Simon Krenger, Christian Meyer, Franziska Corradi.

Das Projekt soll gemäss UML umgesetzt werden. 



Systemspezifikation
--------------------

Das Projekt besteht hauptsächchli aus drei Teilen. Graphische Darstellung, Spiellogik und Datenkommunikation.

Als Programmiersprache kommt Java zum Einsatzt. Die Kommunikation soll direkt zwischen den Spielpartnern Stattfinden und daher ohne Server auskommen. 


Vision
--------------------



Requirements

Non Funktional Requiremenst

Portabilität
Stabilität 
Fehlertoleranz Netzwerk 
Flüssig
Graphisch ansprechende Darstellung


Aufgabenstellung (gemäss liste)


Functional Requirements

1. Darstellung Spielfelder
   Es sollen zwei Quadratische Spielfelder (10x10) angezeigt werden. Das eigene und das gegnerische.
	
2. Platzeren von Schiffen gemässe Vorgaben
   Auf dem eigenen Spielfeld müssen die Vorgegebenen Schiffe platzert, verschoben und gedreht werden 	     können. Die Platzierung muss den Regeln entsprechen.

3. Verbinden mit einem Gegenspieler
   Ein Gegenspieler muss über das Netzwerk gefunden werden können. 

4. Durchführen des Spiles
   Es soll möglich sein, via Eingabe einen schuss auf das gegnerische Spielfeld abzugeben. Es findet eine  Rückmeldung statt, ob ein schiff getroffen oder gar verenkt wurde. Treffer und Fehlschüsse werden Visuell differenziert auf dem Gegnerischen Spieufeld Angezegt. Die Schussabgaben des Gegners werden auf dem Eigenen SPielfeld angezeigt. Wenn eine partei alle gegnerischen schiffe verenkt hat, wird eine nachricht über den Sieg/Verlust angezeigt und das spiel ist beendet.
  

Additional Features
-------------------


1. Zusätzliche Anzeigefeautures
   Eigenes und gegnerisches Schiffs Inventar
   Graphische Hilfestellung für nicht belegbare Felder auf dem Gegnerischen Spielfeld

2. Computer Gegner (AI)ge
   Solle kein Menschlicher Spieler verffügbar sein, kann das Spiel gegen einen "Programmierten" programmierten Gegner gespielt werden. 
   

3. Auto- Search Gegner im eigenen Netz
   Es soll eine Option zur verfügung gestellt werden, um im Eigenen Netzwerk nach verfügbaren gegnern zu   suchen. 



Optional Feautures
---------------------
Features welche zu einem Späteren Zeitpunkt zusätzlich implementiert werden können.

- Chat Funktion 
- Visuelle Themas
- Spiechern es Spielsatatus
- High Score  / Hisotry 
- Eigene Schiffskompositionen
- Speed Battleship (analog Speed chess)
- 3D Varante



1. Kommunikation

Solution Overview
1. Kontext Model
2. Systemarchitektur
3. Programmiersprache

Mayor Feautures



Arbeiten 20.09.2013
Arbeitsverteilung

Simu: Projektplan
Meyer: UseCases
Fränzi: Vision






